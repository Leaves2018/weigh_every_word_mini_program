// 用于实现滑动手势操作
var minOffset = 30;
var minTime = 60;
var startX = 0;
var startY = 0;
// var startTime = 0;

module.exports = {
  bottomButtonTap: function(event, ownerInstance) {
    var type = event.currentTarget.dataset.type;
    var info = event.currentTarget.dataset.info;
    // console.log('type=' + JSON.stringify(type))
    // console.log('info=' + JSON.stringify(info))
    // 处理halfScreenDialog和wordCardSet两处的按钮点击事件，包装成统一形式再向上触发
    // wxs暂不允许处理自定义事件，故halfScreenDialog处理方法移动到word-card-halfScreenDialog.js中
    if (type === 'halfScreenDialog') {
      var index = event.detail.index;
      var _id = event.currentTarget.dataset.info;
      var eventDetail = {
        type: type,
        index: index,
        _id: _id,
      }
    } else if (type === 'wordCardSet') {
      var index = info[0];
      var _id = info[1];
      var eventDetail = {
        type: type,
        index: index,
        _id: _id
      };
      var number = info[2];
      var instance = ownerInstance.selectComponent('.word-card-container.item' + (number + 0));
      instance.setStyle({
        "border-color": index === 0 ? 'rgba(2, 194, 97, 1)' : 'rgba(62, 121, 225, 1)',
      })
      // 滚动到下一个单词位置（是否可以不经过逻辑层，直接wxs设置滚动位置？）
      // eventDetail['selector'] = '.word-card-container.item' + (number + 1);
      ownerInstance.callMethod('scroll', {
        'selector': 'item' + (number + 1)
      })
    }
    ownerInstance.triggerEvent('buttontap', eventDetail, {});
  },
  touchMove: function(event, ownerInstance) {
    // console.log(JSON.stringify(event));
  },
  touchStart: function(event, ownerInstance) {
    startX = event.touches[0].pageX;
    startY = event.touches[0].pageY;
    // startTime = new Date().getTime();
  },
  touchCancel: function(event, ownerInstance) {
    startX = 0;
    startY = 0;
    // startTime = 0;
  },
  touchEnd: function(event, ownerInstance) {
    var endX = event.changedTouches[0].pageX;
    var endY = event.changedTouches[0].pageY;
    // var touchTime = new Date().getTime() - startTime;

    // 开始判断
    // 1. 时间是否达到阈值
    // if (touchTime >= minTime) {
    // 2. 偏移量是否达到阈值
    var xOffset = endX - startX;
    var yOffset = endY - startY;
    var myEventDetail = {
      xOffset: xOffset,
      yOffset: yOffset,
      // touchTime: touchTime,
      // lemmaID: this.data._lemma ? this.data._lemma._id : undefined, // 回传lemma的ID（如果有lemma）
    };
    // 判断左右滑动还是上下滑动
    if (Math.abs(xOffset) >= Math.abs(yOffset) && Math.abs(xOffset) >= minOffset) {
      // 判断向左滑动还是向右滑动
      if (xOffset < 0) {
        ownerInstance.triggerEvent('swipeleft', myEventDetail);
      } else {
        ownerInstance.triggerEvent('swiperight', myEventDetail);
      }
    } else if (Math.abs(xOffset) < Math.abs(yOffset) && Math.abs(yOffset) >= minOffset) {
      // 判断向上滑动还是向下滑动
      if (yOffset < 0) {
        ownerInstance.triggerEvent('swipeup', myEventDetail);
      } else {
        ownerInstance.triggerEvent('swipedown', myEventDetail);
      }
    }
    // } else {
    //   // console.log("滑动时间过短", touchTime);
    // }
  },

}